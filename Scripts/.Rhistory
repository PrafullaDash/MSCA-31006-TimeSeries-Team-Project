# checking the model
summary(m2_prior)
# diagnozing model - residuals
checkresiduals(m2_prior)
page_2016_Rio_Olympics_views <- page_2016_Rio_Olympics_views[100:400]
# converting data to ts
page_2016_Rio_Olympics_views <- ts(page_2016_Rio_Olympics_views,frequency = 1)
# plotting the time-series
autoplot(page_2016_Rio_Olympics_views)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
# converting to time-series
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views_post)
autoplot(page_2016_Rio_Olympics_views_prior)
# applying auto.arima
m2_prior <- auto.arima(page_2016_Rio_Olympics_views_prior,lambda = 'auto')
# checking the model
summary(m2_prior)
# diagnozing model - residuals
checkresiduals(m2_prior)
subset_oly_ts<-oly_ts[0:400]
autoplot(subset_oly_ts)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda = -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
plot(page_2016_Rio_Olympics_views,type = 'l')
page_2016_Rio_Olympics_views <- page_2016_Rio_Olympics_views[100:400]
# converting data to ts
page_2016_Rio_Olympics_views <- ts(page_2016_Rio_Olympics_views,frequency = 1)
# plotting the time-series
autoplot(page_2016_Rio_Olympics_views)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
# converting to time-series
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views_post)
autoplot(page_2016_Rio_Olympics_views_prior)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda = -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
# visualization
library('ggplot2')
# data manipulation
library('dplyr')
library('readr')
library('imputeTS')
#time series
library('fpp')
library('forecast')
library('xts')
library('zoo')
library(prophet)
library('TSA')
page_2016_Rio_Olympics_views <- data.matrix(read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",nrows = 1,skip = 12186))
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
autoplot(oly_ts)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda = 1.311656)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
kpss.test(page_2016_Rio_Olympics_views_prior_transformed)
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
kpss.test(page_2016_Rio_Olympics_views_prior_transformed_diff)
# differencing
page_2016_Rio_Olympics_views_prior_transformed_diff2 <- diff(page_2016_Rio_Olympics_views_prior_transformed_diff,lag = 7)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff2)
# applying auto.arima
m2_prior <- auto.arima(page_2016_Rio_Olympics_views_prior,lambda = 'auto',seasonal = TRUE)
# checking the model
summary(m2_prior)
# diagnozing model - residuals
checkresiduals(m2_prior)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
# converting to time-series
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views_post)
autoplot(page_2016_Rio_Olympics_views_prior)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda = -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
# applying auto.arima
m_prior <- auto.arima(page_2016_Rio_Olympics_views_prior,lambda = 'auto')
# checking the model
summary(m_prior)
# diagnozing model - residuals
checkresiduals(m_prior)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
# converting to time-series
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views_post)
autoplot(page_2016_Rio_Olympics_views_prior)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
kpss.test(page_2016_Rio_Olympics_views_prior_transformed)
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
kpss.test(page_2016_Rio_Olympics_views_prior_transformed_diff)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
autoplot(oly_ts)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
kpss.test(page_2016_Rio_Olympics_views_prior_transformed)
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
kpss.test(page_2016_Rio_Olympics_views_prior_transformed_diff)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
autoplot(oly_ts)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
page_2016_Rio_Olympics_views <- page_2016_Rio_Olympics_views[100:400]
# converting data to ts
page_2016_Rio_Olympics_views <- ts(page_2016_Rio_Olympics_views,frequency = 1)
autoplot(page_2016_Rio_Olympics_views)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views <- page_2016_Rio_Olympics_views[100:400]
# converting data to ts
page_2016_Rio_Olympics_views <- ts(page_2016_Rio_Olympics_views,frequency = 1)
autoplot(page_2016_Rio_Olympics_views)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views[1:75])
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views[76:300])
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
kpss.test(page_2016_Rio_Olympics_views_prior_transformed)
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
kpss.test(page_2016_Rio_Olympics_views_prior_transformed_diff)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
page_2016_Rio_Olympics_views <- data.matrix(read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",nrows = 1,skip = 12186))
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
autoplot(oly_ts)
subset_oly_ts<-oly_ts[100:400]
autoplot(subset_oly_ts)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- subset_oly_ts[1:75]
page_2016_Rio_Olympics_views_post <- subset_oly_ts[76:300]
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
plot(page_2016_Rio_Olympics_views,type = 'l')
page_2016_Rio_Olympics_views <- page_2016_Rio_Olympics_views[100:400]
# converting data to ts
page_2016_Rio_Olympics_views <- ts(page_2016_Rio_Olympics_views,frequency = 1)
# plotting the time-series
autoplot(page_2016_Rio_Olympics_views)
# splitting to prior and post intervention
page_2016_Rio_Olympics_views_prior <- page_2016_Rio_Olympics_views[1:75]
page_2016_Rio_Olympics_views_post <- page_2016_Rio_Olympics_views[76:300]
# converting to time-series
page_2016_Rio_Olympics_views_prior <- ts(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_post <- ts(page_2016_Rio_Olympics_views_post)
autoplot(page_2016_Rio_Olympics_views_prior)
autoplot(page_2016_Rio_Olympics_views_post)
BoxCox.lambda(page_2016_Rio_Olympics_views_prior)
page_2016_Rio_Olympics_views_prior_transformed <- BoxCox(page_2016_Rio_Olympics_views_prior,lambda =  -0.6576963)
autoplot(page_2016_Rio_Olympics_views_prior_transformed)
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed)
# differencing
kpss.test(page_2016_Rio_Olympics_views_prior_transformed)
page_2016_Rio_Olympics_views_prior_transformed_diff <- diff(page_2016_Rio_Olympics_views_prior_transformed)
# visulalizing
tsdisplay(page_2016_Rio_Olympics_views_prior_transformed_diff)
kpss.test(page_2016_Rio_Olympics_views_prior_transformed_diff)
page_2016_Rio_Olympics_views <- data.matrix(read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",nrows = 1,skip = 12186))
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
page_2016_Rio_Olympics_views <- data.matrix(read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",nrows = 1,skip = 12186))
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 1)
autoplot(oly_ts)
# visualization
library('ggplot2')
# data manipulation
library('dplyr')
library('readr')
library('imputeTS')
#time series
library('fpp')
library('forecast')
library('xts')
library('zoo')
library(prophet)
library('TSA')
page_2016_Rio_Olympics_views <- data.matrix(read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",nrows = 1,skip = 12186))
# removing column names
dimnames(page_2016_Rio_Olympics_views) <- NULL
# converting to array
page_2016_Rio_Olympics_views <- array(page_2016_Rio_Olympics_views)
# checking the values
head(page_2016_Rio_Olympics_views)
# no. of ovservations
length(page_2016_Rio_Olympics_views)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
autoplot(oly_ts)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
autoplot(oly_ts,xlab="Day",ylab="RIO Olympics wikipedia page")
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
autoplot(oly_ts,xlab="Day",ylab="RIO Olympics wikipedia page views")
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
autoplot(oly_ts, xlab="Day",ylab ="RIO Olympics wikipedia page views")
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
plot(oly_ts, xlab="Day",ylab ="RIO Olympics wikipedia page views")
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
oly_ts <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
plot(oly_ts)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
RioOlympics <- xts(page_2016_Rio_Olympics_views, order.by =time_index ,frequency = 365.25)
plot(RioOlympics)
# visualization
library('ggplot2')
# data manipulation
library('dplyr')
library('readr')
library('imputeTS')
#time series
library('fpp')
library('forecast')
library('xts')
library('zoo')
library(prophet)
library('TSA')
# importing the dataset
train_1 <- read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",skip =0)
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
CostCap_ts <- xts(CostCap, order.by =time_index ,frequency = 365.25)
# importing the dataset
CostCap <- data.matrix(train_1[c("加权平均资本成本_zh.wikipedia.org_all-access_spider"),])
dimnames(CostCap)<-NULL
CostCap<-array(CostCap)
plot(CostCap,type='l')
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
CostCap_ts <- xts(CostCap, order.by =time_index ,frequency = 365.25)
tsdisplay(CostCap_ts,ylab="WACC daily traffic",xlab="Day")
CostCap_train<-CostCap_ts['2015-07-01/2016-09-30']
CostCap_test<-CostCap_ts['2016-10-01/2016-12-31']
tsdisplay(CostCap_train,ylab="WACC daily traffic",xlab="Day")
tsdisplay(CostCap_test,ylab="WACC daily traffic",xlab="Day")
length(CostCap_test)
autoplot(forecast(m1,h=92))
#forecast horizon
h<-92
#naive forecasts
CostCap_train_new<-ts(CostCap_ts['2015-07-01/2016-09-30'])
CostCap_test_new<-ts(CostCap_ts['2016-10-01/2016-12-31'])
#evaluating the models
Model_Mean <- meanf(CostCap_train_new, h)
Model_Naive <- naive(CostCap_train_new, h)
Model_Drift <- rwf(CostCap_train_new, h, drift=TRUE)
#Naive forecast
autoplot(CostCap_train_new) +
autolayer(Model_Mean$mean, series="Mean") +
autolayer(Model_Naive$mean, series="Naive") +
autolayer(Model_Drift$mean, series="Drift") +
ggtitle("Forecasts for daily  Weighted average cost of capital Wikepedia Page") +
xlab("Days") + ylab("WACC traffic")
kpss.test(CostCap_train)
kpss.test(CostCap_train)
CostCap_train_boxcox<-CostCap_train %>% BoxCox(lambda = BoxCox.lambda(CostCap_train))
CostCap_train_diff <- diff(CostCap_train_boxcox)
kpss.test(CostCap_train_diff)
tsdisplay(CostCap_train_diff)
#forecast horizon
h<-92
#naive forecasts
CostCap_train_new<-ts(CostCap_ts['2015-07-01/2016-09-30'])
CostCap_test_new<-ts(CostCap_ts['2016-10-01/2016-12-31'])
#evaluating the models
Model_Mean <- meanf(CostCap_train_new, h)
Model_Naive <- naive(CostCap_train_new, h)
Model_Drift <- rwf(CostCap_train_new, h, drift=TRUE)
#Naive forecast
autoplot(CostCap_train_new) +
autolayer(Model_Mean$mean, series="Mean") +
autolayer(Model_Naive$mean, series="Naive") +
autolayer(Model_Drift$mean, series="Drift") +
ggtitle("Forecasts for daily  Weighted average cost of capital Wikepedia Page") +
xlab("Days") + ylab("WACC traffic")
accuracy(Model_Mean,CostCap_test)
accuracy(Model_Naive,CostCap_test)
accuracy(Model_Drift,CostCap_test)
auto.arima(CostCap_train,seasonal = TRUE,lambda = 'auto')
m1<-Arima(CostCap_train,lambda = 'auto',order=c(0,1,1))
checkresiduals(m1)
autoplot(forecast(m1,h=92))
accuracy(forecast(m1,h=92),CostCap_test)
# visualization
library('ggplot2')
# data manipulation
library('dplyr')
library('readr')
library('imputeTS')
#time series
library('fpp')
library('forecast')
library('xts')
library('zoo')
library(prophet)
library('TSA')
# importing the dataset
train_1 <- read.csv("~/Desktop/UChicago/Quarters/03-Quarters/Data/TS/web-traffic-time-series-forecasting/train_1.csv", header = TRUE, row.names = 1,sep = ",",skip =0)
# importing the dataset
CostCap <- data.matrix(train_1[c("加权平均资本成本_zh.wikipedia.org_all-access_spider"),])
dimnames(CostCap)<-NULL
CostCap<-array(CostCap)
plot(CostCap,type='l')
time_index <- seq(from = as.POSIXct("2015-07-01"), to = as.POSIXct("2016-12-31"), by = "day")
CostCap_ts <- xts(CostCap, order.by =time_index ,frequency = 365.25)
tsdisplay(CostCap_ts,ylab="WACC daily traffic",xlab="Day")
CostCap_train<-CostCap_ts['2015-07-01/2016-09-30']
CostCap_test<-CostCap_ts['2016-10-01/2016-12-31']
tsdisplay(CostCap_train,ylab="WACC daily traffic",xlab="Day")
tsdisplay(CostCap_test,ylab="WACC daily traffic",xlab="Day")
length(CostCap_test)
autoplot(CostCap_ts)
